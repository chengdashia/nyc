server:
  port: 8686

spring:
  datasource:
    username: DONG(hLrOX97vAYpm+ustU38mvTAcoyotlkai)               #数据库的用户名
    password: DONG(CZQBQvx6ZF5SsDWJiDVX6+ttIp9HllOMomH4keXBJ4k=)         #数据库的密码
    url: jdbc:mysql://82.157.157.133:3306/nyc?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT%2B8   #url
    driver-class-name: com.mysql.cj.jdbc.Driver             #数据库的驱动
    type: com.alibaba.druid.pool.DruidDataSource  # 指定数据源类型
    # 连接池配置：
    druid:
      #初始化连接池大小
      initial-size: 5
      #配置最小连接数
      min-idle: 5
      #配置最大连接数
      max-active: 20
      #配置连接等待超时时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #测试连接
      validation-query: SELECT 1 FROM DUAL
      #申请连接的时候检测，建议配置为true，不影响性能，并且保证安全
      test-while-idle: true
      #获取连接时执行检测，建议关闭，影响性能
      test-on-borrow: false
      #归还连接时执行检测，建议关闭，影响性能
      test-on-return: false
      #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
      pool-prepared-statements: false
      #开启poolPreparedStatements后生效
      max-pool-prepared-statement-per-connection-size: 20
      #配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      #配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        #IP白名单(为空允许所有访问 注释掉的话除了127.0.0.1都不能访问)
        allow: 127.0.0.1
        #IP黑名单 (存在共同时，deny优先于allow)
        deny:
        # 禁用HTML页面上的“Reset All”功能  不允许清空统计数据
        reset-enable: false
        #登录名
        login-username: root
        #登录密码
        login-password: root
        #true代表开启管理平台false表示关闭这个功能
        enabled: true
          # 这么写会使用默认的过滤器 如果filters和filter都指定了那么filter必须设置enabled:true才生效
        #比如 下边的filter不生效
        #filters: stat
        #filter:
        #stat:
        #merge-sql: false
        #log-slow-sql: true
        #slow-sql-millis: 1
      #      filters: wall
      filter:
        wall:
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLException
          throw-exception: true
          config:
            #是否允许调用Connection:getMetadata方法，这个方法调用会暴露数据库的表信息 默认true
            metadata-allow: true
            #是否允许调用Connection/Statement/ResultSet的isWrapFor和unwrap方法，这两个方法调用，使得有办法拿到原生驱动的对象，绕过WallFilter的检测直接执行SQL。
            wrap-allow: false
          enabled: true
        stat:
          #合并sql多个重复sql统计为一条
          merge-sql: false
          log-slow-sql: true
          slow-sql-millis: 200
          enabled: true
        slf4j:
          enabled: true
          #是否开启
          statement-log-enabled: true
          #是否 打印Statement可执行语句
          statement-executable-sql-log-enable: true
          statement-create-after-log-enabled: false
          #是否打印耗时
          statement-execute-after-log-enabled: true
          #是否 打印PreparedStatement语句参数和参数类型
          statement-parameter-set-log-enabled: false
          statement-parameter-clear-log-enable: false
          statement-prepare-after-log-enabled: false
          #是否 打印 Statement close 日志
          statement-close-after-log-enabled: false
          statement-log-error-enabled: true
          #是否 打印 执行结果
          result-set-log-enabled: false
          statement-sql-pretty-format: false
      use-global-data-source-stat: true

  # redis
  redis:
    database: 0             #redis 数据库索引（默认为0）
    host: 82.157.157.133   #redis 服务器地址
    port: 6379              #redis 服务器连接端口号
    password: DONG(hmFD0Pg80BkU699ubk1nfARCimiGqwGlmXHfZuspS/4=)              #redis 服务器连接密码  默认为空
    lettuce:
      pool:
        max-active: 8        # 连接池最大连接数(使用负值表示没有限制） 默认8
        max-wait: -1         #连接池最大阻塞等待时间（使用负值表示没有限制） 默认-1
        max-idle: 8          #连接池最大空闲连接 默认8
        min-idle: 0          #连接池最小空闲连接 默认 0
    timeout: 3000

# Sa-Token配置
sa-token:
  jwt-secret-key: "bigDataStudio666##@@&#*#"
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 92000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false


# 指定bean
jasypt:
  encryptor:
    bean: CodeEncryptBean
    property:
      prefix: DONG(
      suffix: )

