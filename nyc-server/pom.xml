<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>nyc</artifactId>
        <groupId>com.git.bds</groupId>
        <version>${revision}</version>
    </parent>

    <artifactId>nyc-server</artifactId>
    <packaging>jar</packaging>

    <name>${project.artifactId}</name>
    <description>
        项目启动类，包括一些配置
    </description>


    <dependencies>
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>com.git.bds</groupId>
            <artifactId>nyc-applet-user</artifactId>
        </dependency>


        <dependency>
            <groupId>com.git.bds</groupId>
            <artifactId>nyc-role-permission</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <groupId>com.git.bds</groupId>
            <artifactId>nyc-file-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.git.bds</groupId>
            <artifactId>nyc-applet-corp</artifactId>
        </dependency>


        <dependency>
            <groupId>com.git.bds</groupId>
            <artifactId>nyc-admin</artifactId>
        </dependency>

        <!--
        spring-context-indexer功能，主要作用是解决在类扫描的时候避免类过多导致的扫描速度过慢的问题。
        使用方法也很简单，导入依赖，然后在启动类打上@Indexed注解，这样在程序编译打包之后会生成META-INT/spring.components文件，
        当执行ComponentScan扫描类时，会读取索引文件，提高扫描速度。
        。-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-indexer</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <build>
        <!-- 设置构建的 jar 包名 -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- 打包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version> <!-- 如果 spring.boot.version 版本修改，则这里也要跟着修改 -->
                <configuration>
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal> <!-- 将引入的 jar 打入其中 -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
